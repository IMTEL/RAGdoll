ENV = 'dev' # 'prod' or 'dev'

# API URLs for frontend
RAGDOLL_CONFIG_API_URL = 'http://localhost:3000'
RAGDOLL_CHAT_API_URL = 'http://localhost:3001'

# LLM api keys and models

# OpenAI
OPENAI_API_KEY='your_api_key_here'
GPT_MODEL = 'gpt-4o-mini'

# Google Gemini
GEMINI_API_KEY='your_api_key_here'
GEMINI_MODEL='gemini-2.0-flash-lite'

# Idun provider
IDUN_MODEL='openai/gpt-oss-120b'
IDUN_API_URL='https://idun-llm.hpc.ntnu.no/api/chat/completions'
IDUN_API_KEY='your_idun_api_key_here'


# Database Configuration
# Production: Use MongoDB Atlas (supports vector search)
MONGODB_URI='mongodb+srv://username:password@cluster.mongodb.net/?retryWrites=true&w=majority'

# Database and Collections
MONGODB_DATABASE='database'
MONGODB_AGENT_COLLECTION='agents'
MONGODB_CONTEXT_COLLECTION='contexts'
MONGODB_DOCUMENTS_COLLECTION='documents'

# TODO: Both the context and agent DAOs share the RAG_DATABASE_SYSTEM.
# Fix this by separating it into two variables
RAG_DATABASE_SYSTEM='mongodb' 

# Testing/Mock database settings
# Use MongoDB Atlas for testing with different database name
MOCK_RAG_DATABASE_SYSTEM = 'mongodb'
MOCK_MONGODB_URI='mongodb+srv://username:password@cluster.mongodb.net/?retryWrites=true&w=majority'
MOCK_MONGODB_DATABASE='test_database'

# AccessService, handles access keys, authorizes use of agents
# Set to "mock" to deactivate access, service removes auth from agent usage
ACCESS_SERVICE = 'service' 

# For encrypting access keys
FERNET_KEY='your_fernet_key_here'